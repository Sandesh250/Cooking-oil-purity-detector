#include <WiFiS3.h>
#include <ThingSpeak.h>
#include <Adafruit_TCS34725.h>
#include <LiquidCrystal_I2C.h>

// WiFi credentials
char ssid[] = "Prajwal";
char pass[] = "0987654321";

// ThingSpeak settings
WiFiClient client;
unsigned long myChannelNumber = 2995047;
const char *myWriteAPIKey = "TOJFB42QIVU3SMMQ";

// Sensor Pins
const int pHpin = A0;
const int turbidityPin = A1;

// LED Pins
const int greenLED = 3;
const int yellowLED = 4;
const int redLED = 5;

// Calibrated slope and intercept
float pHSlope = -5.555;
float pHIntercept =29.39;

float turbiditySlope = -648.88;
float turbidityIntercept = 2961.47;

// Color sensor setup
Adafruit_TCS34725 tcs = Adafruit_TCS34725(
  TCS34725_INTEGRATIONTIME_50MS,
  TCS34725_GAIN_4X
);

// LCD setup
LiquidCrystal_I2C lcd(0x27, 16, 2);

void setup() {
  Serial.begin(9600);

  pinMode(greenLED, OUTPUT);
  pinMode(yellowLED, OUTPUT);
  pinMode(redLED, OUTPUT);

  // Connect to WiFi
  while (WiFi.begin(ssid, pass) != WL_CONNECTED) {
    Serial.print(".");
    delay(1000);
  }
  Serial.println("\nWiFi connected!");
  ThingSpeak.begin(client);

  // Color sensor init
  if (tcs.begin()) {
    Serial.println("TCS34725 sensor found.");
  } else {
    Serial.println("No TCS34725 sensor found. Check wiring!");
    while (1);
  }

  // LCD init
  lcd.init();
  lcd.backlight();
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Oil Monitor Ready");
  delay(2000);
}

void loop() {
  int pHraw = analogRead(pHpin);
  int turbRaw = analogRead(turbidityPin);

  float voltagePH = pHraw * (5.0 / 1023.0);
  float voltageTurb = turbRaw * (5.0 / 1023.0);

  float pHValue = pHSlope * voltagePH + pHIntercept;
  float turbidityValue = turbiditySlope * voltageTurb + turbidityIntercept;

  // Read color data
  uint16_t r, g, b, c;
  tcs.getRawData(&r, &g, &b, &c);
  float colorValue = (r + g + b) / 3.0;

  // Fail-safe
  if (pHraw < 10) pHValue = 0;
  if (turbRaw < 10) turbidityValue = 0;
  if (c < 10) colorValue = 0;

  int oilstatus_no;
  String oilStatus;

  if (turbidityValue < 200 && colorValue >18) {
    oilStatus = "Good Oil";
    digitalWrite(greenLED, HIGH);
    digitalWrite(yellowLED, LOW);
    digitalWrite(redLED, LOW);
    oilstatus_no = 1;
  } else if (turbidityValue >500 && colorValue >15) {
    oilStatus = "Used Oil";
    digitalWrite(greenLED, LOW);
    digitalWrite(yellowLED, HIGH);
    digitalWrite(redLED, LOW);
    oilstatus_no = 2;
  } else {
    oilStatus = "Bad Oil";
    digitalWrite(greenLED, LOW);
    digitalWrite(yellowLED, LOW);
    digitalWrite(redLED, HIGH);
    oilstatus_no = 3;
  }

  // Serial monitor output
  Serial.println("=== Sensor Readings ===");
  Serial.print("pH Voltage: "); Serial.print(voltagePH, 2);
  Serial.print(" | pH: "); Serial.println(pHValue, 2);

  Serial.print("Turbidity Voltage: "); Serial.print(voltageTurb, 2);
  Serial.print(" | Turbidity: "); Serial.println(turbidityValue, 2);

  Serial.print("Color R: "); Serial.print(r);
  Serial.print(" G: "); Serial.print(g);
  Serial.print(" B: "); Serial.print(b);
  Serial.print(" | Avg Brightness: "); Serial.println(colorValue, 2);
  Serial.println("Oil Status: " + oilStatus);
  Serial.println("=======================\n");

  // LCD output
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("pH:"); lcd.print(pHValue, 1);
  lcd.print(" T:"); lcd.print(turbidityValue, 0);
  lcd.setCursor(0, 1);
  lcd.print("Status: "); lcd.print(oilStatus);

  // Upload to ThingSpeak
  ThingSpeak.setField(1, pHValue);
  ThingSpeak.setField(2, turbidityValue);
  ThingSpeak.setField(3, colorValue);
  ThingSpeak.setField(4, oilstatus_no);

  int status = ThingSpeak.writeFields(myChannelNumber, myWriteAPIKey);
  if (status == 200) {
    Serial.println("Data sent to ThingSpeak successfully!\n");
  } else {
    Serial.print("ThingSpeak Error: ");
    Serial.println(status);
  }

  delay(10000);  // Wait 10 seconds
}
